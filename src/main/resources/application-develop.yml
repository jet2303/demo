

# spring.datasource.driver-class-name=org.h2.Driver

server:
    port: 8080
spring:
    datasource:
        hikari:
            jdbc-url: jdbc:h2:mem:testdb;MODE=MYSQL;
            driver-class-name: org.h2.Driver
            username: sa
            password: 
        # driver-class-name: org.h2.Driver
        # url: jdbc:h2:mem:testdb;MODE=MYSQL
        # username: sa

    jpa:
        hibernate:
            ddl-auto: create
        defer-datasource-initialization: true
        database-platform: org.hibernate.dialect.H2Dialect
        properties:
            hibernate:
                format_sql: true
                show_sql: true
                dialect: org.hibernate.dialect.H2Dialect
                # use_sql_comments: true
    h2:
        console:
            enabled: true
            path: /h2-console
    mail:
        host: smtp.gmail.com        # SMTP 서버 호스트 (Google)
        port: 587                   # SMTP 서버 포트 (Google 경우 587 사용)
        username: wlstn2525         # SMTP 서버 로그인 아이디 (풀주소 사용 가능! Ex. Test@google.com)
        password: cfjfxvvmnfiblchl  # SMTP 서버 로그인 패스워드 - 발급받은 앱 비밀번호 16자리!
        properties:
            mail:
                debug : true        # SMTP Debug - 메일 전송시 상황, 로그를 확인 하는것.
                smtp:
                    connectionout: 5000 # TimeOut 제한
                    starttls:   
                        enable: true    # starttls 설정 = true --> SSL/TLS 기반의 SMTPS 기능 즉 보안기능 활성화
                        required: true
                    auth: false

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # # # # #  변수  # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# file path 
testfile:
    path: C:\Users\Su\Desktop\todoapp\demo\src\test\resources\images\
    name: image1.jpg
testsave:
    folder: C:\Users\Su\Desktop\todoapp\demo\src\test\resources\savefolder\


# jwt
app:
    auth:
        tokenSecret: tokensecretkeytokensecretkeytokensecretkeytokensecretkeytokensecretkeytokensecretkeytokensecretkeytokensecretkey
        accessTokenExpirationMsec: 1800000
        refreshTokenExpirationMsec: 604800000
    cors:
        allowedOrigins: http://localhost:3000, http://localhost:8080
    oauth2:
        authorizedRedirectUris: http://localhost:3000/oauth2/redirect, myandroidapp://oauth2/redirect, myiosapp://oauth2/redirect
